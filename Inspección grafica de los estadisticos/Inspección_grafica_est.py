# -*- coding: utf-8 -*-
"""PP1-G18-SPRINT02-Inspección-gráfica-de-los-estadísticos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TESiUfAeTsPQ8O3D4kd7As1p26ARKnpy

**INSPECCIÓN GRÁFICA DE LOS ESTADÍSTICOS**
"""

#Importamos librerias
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from mpl_toolkits.mplot3d import Axes3D

#Cargamos el dataset principal y unificado
ruta_archivo = "dataset_inspección/Datos_limpieza_unidos.csv"
data_df = pd.read_csv(ruta_archivo, delimiter = ";")
data_df.head(10)

"""*Exploración inicial:*"""

#Exploración de los datos
data_df.info()
data_df.describe()

"""*Inspección gráfica*:

Creación de gráficos para visualizar la relación entre la variable dependiente "y" (en este caso, podría ser "Peso") y las variables independientes "x".
"""

##Relación entre peso y grasa
plt.scatter(data_df['Grasa %'], data_df['Peso'])
plt.xlabel('Grasa %')
plt.ylabel('Peso')
plt.title('Relación entre Grasa % y Peso')
plt.show()

##Relaciones entre múltiples pares de variables al mismo tiempo.Matriz de diagramas de dispersión
sns.pairplot(data_df, vars=['Peso', 'Grasa %', 'Musculo %', 'Calorias(kcal)'])
plt.show()

##Relación en tendencias temporales
plt.plot(data_df['Dias_Transcurridos'], data_df['Peso'])
plt.xlabel('Dias Transcurridos')
plt.ylabel('Peso')
plt.title('Tendencia del Peso a lo largo del Tiempo')
plt.xticks(rotation=45)
plt.show()

##Densidad de la distribución conjunta del peso y la grasa
sns.kdeplot(data=data_df, x='Peso', y='Grasa %', cmap='Blues', fill=True)
plt.xlabel('Peso')
plt.ylabel('Grasa %')
plt.title('Distribución Conjunta de Peso y Grasa %')
plt.show()

##Correlación entre muchas variables
correlacion = data_df[['Peso', 'Grasa %', 'Musculo %', 'BMI', 'Grasa visceral', 'Metabolismo', 'Agua']].corr()
sns.heatmap(correlacion, annot=True, cmap='coolwarm')
plt.title('Correlación entre Variables')
plt.show()

##Relación de porcentajes de grasa y musculo
# Crear un gráfico de contorno
sns.kdeplot(data=data_df, x='Grasa %', y='Musculo %', cmap='viridis', fill=True, levels=20)

# Establecer etiquetas y título
plt.xlabel('Grasa %')
plt.ylabel('Músculo %')
plt.title('Gráfico de Contorno: Relación entre Grasa % y Músculo %')
plt.show()

##Relación entre porcentajes de Musculo, grasa, y BMI.
fig = plt.figure(figsize=(8, 6))
ax = fig.add_subplot(111, projection='3d')
ax.scatter(data_df['Grasa %'], data_df['Musculo %'], data_df['BMI'], s=data_df['BMI'] * 10, alpha=0.5)

ax.view_init(elev=20, azim=100)
ax.dist = 12
ax.set_xlabel('Grasa %', labelpad=20)
ax.set_ylabel('Músculo %', labelpad=20)
ax.set_zlabel('BMI', labelpad=20)

plt.title('Relación: Musculo, Grtasa, y IBM')
plt.show()

"""*Análisis de datos atípicos:*

Para identificar y manejar valores atípicos, puedes utilizar gráficos de caja (box plots) o calcular estadísticas descriptivas.
"""

#Valor atípico del Peso
plt.boxplot(data_df['Peso'])
plt.title('Diagrama de Caja de Peso')
plt.show()

#Valores atípicos de grasa
sns.boxplot(x=data_df['Grasa %'])
plt.title('Diagrama de Caja de Grasa %')
plt.xlabel('Grasa %')
plt.show()

#Valores atípicos de BMI
sns.boxplot(x=data_df['BMI'])
plt.title('Diagrama de Caja de BMI')
plt.xlabel('BMI')
plt.show()

#Valores atípicos de Carbohidratos
umbral_carbohidratos = 100  # Define tu umbral
data_df['Carbh(g) Atípico'] = data_df['Carbh(g)'] > umbral_carbohidratos
sns.countplot(x='Carbh(g) Atípico', data=data_df)
plt.title('Valores Atípicos en Carbh(g)')
plt.xlabel('Valores Atípicos')
plt.show()

"""*Distribución de probabilidad de las muestras:*"""

#Distribución de peso
plt.hist(data_df['Peso'], bins=20, color='skyblue', edgecolor='black')
plt.xlabel('Peso')
plt.ylabel('Frecuencia')
plt.title('Distribución de Peso')
plt.show()

#Distribución de Grasa
sns.kdeplot(data=data_df['Grasa %'], fill=True, color='skyblue')
plt.xlabel('Grasa %')
plt.ylabel('Densidad')
plt.title('Distribución de Probabilidad de Grasa %')
plt.show()

#Distribución de Metabolismo
plt.hist(data_df['Metabolismo'], bins=20, color='lightgreen', edgecolor='black')
plt.xlabel('Metabolismo')
plt.ylabel('Frecuencia')
plt.title('Distribución de Metabolismo')
plt.show()

#Distribución de Agua
sns.kdeplot(data=data_df['Agua'], fill=True, color='lightblue')
plt.xlabel('Agua')
plt.ylabel('Densidad')
plt.title('Distribución de Probabilidad de Agua')
plt.show()

#Distribución de Proteina
plt.hist(data_df['Proteina(g)'], bins=20, color='lightcoral', edgecolor='black')
plt.xlabel('Proteina(g)')
plt.ylabel('Frecuencia')
plt.title('Distribución de Proteina(g)')
plt.show()

#Distribución de Colesterol
sns.kdeplot(data=data_df['Colesterol(mg)'], fill=True, color='lightgreen')
plt.xlabel('Colesterol(mg)')
plt.ylabel('Densidad')
plt.title('Distribución de Probabilidad de Colesterol(mg)')
plt.show()